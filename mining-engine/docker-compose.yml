version: '3.8'

services:
  orchestrator:
    build:
      context: .
      dockerfile: docker/Dockerfile.orchestrator
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://mining:password@postgres:5432/mining
    depends_on:
      - redis
      - postgres
    volumes:
      - ./orchestrator:/app
    networks:
      - mining-network

  dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.dashboard
    ports:
      - "3000:3000"
    depends_on:
      - orchestrator
    volumes:
      - ./dashboard:/app
    networks:
      - mining-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mining-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mining
      POSTGRES_USER: mining
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mining-network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - mining-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mining-network

volumes:
  redis_data:
  postgres_data:
  grafana_data:


networks:
  mining-network:
    driver: bridge
