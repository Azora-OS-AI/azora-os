version: '3.8'

services:
  # ===========================================================================
  # CORE INFRASTRUCTURE - Distributed & Fault-Tolerant
  # ===========================================================================
  
  redis-cluster:
    image: redis:7-alpine
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "6379-6384:6379-6384"
    volumes:
      - redis_cluster:/data
    networks:
      - azora-network
    deploy:
      replicas: 6
      resources:
        limits:
          cpus: '2'
          memory: 4G

  postgres-primary:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=azora_world
      - POSTGRES_USER=azora_admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_REPLICATION_MODE=master
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_primary:/var/lib/postgresql/data
      - ./init-db-complete.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c max_connections=1000
      -c shared_buffers=4GB
      -c effective_cache_size=12GB
      -c maintenance_work_mem=1GB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=500
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=10MB
      -c huge_pages=try
      -c min_wal_size=4GB
      -c max_wal_size=16GB
    networks:
      - azora-network

  postgres-replica:
    image: postgres:15-alpine
    environment:
      - POSTGRES_REPLICATION_MODE=slave
      - POSTGRES_MASTER_SERVICE=postgres-primary
      - POSTGRES_MASTER_PORT=5432
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
    ports:
      - "5433:5432"
    depends_on:
      - postgres-primary
    networks:
      - azora-network
    deploy:
      replicas: 2

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_DB=azora_analytics
      - POSTGRES_USER=analytics_user
      - POSTGRES_PASSWORD=${ANALYTICS_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - azora-network

  mongodb-primary:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=azora
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    command: mongod --replSet rs0 --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - mongo_primary:/data/db
    networks:
      - azora-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - azora-network

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - azora-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
    networks:
      - azora-network

  # ===========================================================================
  # INTELLIGENCE & AI CORE - Nation-State Level Capabilities
  # ===========================================================================

  quantum-ai-orchestrator:
    build: ./services/quantum-ai-orchestrator
    ports:
      - "4001:4001"
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - QUANTUM_SEED=${QUANTUM_SEED}
      - INTELLIGENCE_LEVEL=NATIONAL_SECURITY
    depends_on:
      - redis-cluster
      - postgres-primary
      - elasticsearch
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 16G
    networks:
      - azora-network

  predictive-intelligence:
    build: ./services/predictive-intelligence
    ports:
      - "4020:4020"
    environment:
      - MODEL_TYPE=transformer_xl
      - PREDICTION_HORIZON=90d
      - CONFIDENCE_THRESHOLD=0.95
    volumes:
      - ai_models:/models
    networks:
      - azora-network

  threat-detection-engine:
    build: ./services/threat-detection
    ports:
      - "4021:4021"
    environment:
      - THREAT_DB_URL=${THREAT_DB_URL}
      - ANOMALY_SENSITIVITY=high
      - REAL_TIME_MONITORING=true
    networks:
      - azora-network

  behavioral-analytics:
    build: ./services/behavioral-analytics
    ports:
      - "4022:4022"
    environment:
      - TIMESCALE_URL=postgresql://analytics_user:${ANALYTICS_PASSWORD}@timescaledb:5432/azora_analytics
      - ML_MODEL=isolation_forest
    networks:
      - azora-network

  # ===========================================================================
  # AZORA PAY - Quantum-Resistant Payment Infrastructure
  # ===========================================================================

  azora-pay-core:
    build: ./services/azora-pay-core
    ports:
      - "4100:4100"
    environment:
      - PAYMENT_NETWORKS=SWIFT,SEPA,ACH,RTGS,UPI,PAYSAFE,MPESA
      - ENCRYPTION=AES-256-GCM,ChaCha20-Poly1305,Kyber1024
      - PCI_DSS_LEVEL=1
      - FRAUD_DETECTION=enabled
    depends_on:
      - postgres-primary
      - redis-cluster
      - kafka
    networks:
      - azora-network

  swift-connector:
    build: ./services/payment-connectors/swift
    environment:
      - SWIFT_BIC=${SWIFT_BIC}
      - SWIFT_API_KEY=${SWIFT_API_KEY}
    networks:
      - azora-network

  sepa-connector:
    build: ./services/payment-connectors/sepa
    environment:
      - SEPA_IBAN_VALIDATION=strict
    networks:
      - azora-network

  crypto-gateway:
    build: ./services/crypto-gateway
    ports:
      - "4101:4101"
    environment:
      - SUPPORTED_CHAINS=ETH,BTC,SOL,POLY,ARB,BASE,AZR
      - SECURITY_LEVEL=military_grade
    networks:
      - azora-network

  payment-orchestrator:
    build: ./services/payment-orchestrator
    ports:
      - "4102:4102"
    environment:
      - ROUTING_ALGORITHM=intelligent_multi_path
      - FEE_OPTIMIZATION=enabled
    networks:
      - azora-network

  # ===========================================================================
  # AZORA CLOUD - Sovereign Cloud Infrastructure
  # ===========================================================================

  cloud-orchestrator:
    build: ./services/azora-cloud/orchestrator
    ports:
      - "4200:4200"
    environment:
      - REGIONS=us-east,us-west,eu-central,asia-pacific,africa-south,middle-east
      - KUBERNETES_ENABLED=true
      - SERVERLESS_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - azora-network

  resource-provisioner:
    build: ./services/azora-cloud/provisioner
    ports:
      - "4201:4201"
    environment:
      - AUTO_SCALING=enabled
      - LOAD_BALANCING=intelligent
    networks:
      - azora-network

  storage-service:
    build: ./services/azora-cloud/storage
    ports:
      - "4202:4202"
    environment:
      - STORAGE_TYPES=block,object,file
      - ENCRYPTION=AES-256,quantum-resistant
      - REPLICATION_FACTOR=3
    volumes:
      - cloud_storage:/data
    networks:
      - azora-network

  edge-compute:
    build: ./services/azora-cloud/edge
    ports:
      - "4203:4203"
    environment:
      - EDGE_LOCATIONS=global
      - LATENCY_TARGET=<10ms
    networks:
      - azora-network

  # ===========================================================================
  # AZORA LEARN - Intelligence-Enhanced Education
  # ===========================================================================

  learning-management-system:
    build: ./services/azora-learn/lms
    ports:
      - "4300:4300"
    environment:
      - AI_TUTOR=enabled
      - ADAPTIVE_LEARNING=true
      - GAMIFICATION=enabled
    depends_on:
      - quantum-ai-orchestrator
    networks:
      - azora-network

  skill-assessment-engine:
    build: ./services/azora-learn/assessment
    ports:
      - "4301:4301"
    environment:
      - ASSESSMENT_TYPES=coding,theoretical,practical
      - AI_PROCTORING=enabled
    networks:
      - azora-network

  content-delivery-network:
    build: ./services/azora-learn/cdn
    ports:
      - "4302:4302"
    environment:
      - VIDEO_STREAMING=adaptive_bitrate
      - CACHING_STRATEGY=intelligent
    networks:
      - azora-network

  copilot-monetization:
    build: ./services/azora-learn/copilot
    ports:
      - "4303:4303"
    environment:
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - REWARD_ALGORITHM=proof_of_contribution
    networks:
      - azora-network

  # ===========================================================================
  # AZORA MARKETPLACE - Global Service Exchange
  # ===========================================================================

  marketplace-engine:
    build: ./services/azora-marketplace/engine
    ports:
      - "4400:4400"
    environment:
      - CATEGORIES=services,products,apis,data,ai_models
      - SMART_CONTRACTS=enabled
      - ESCROW_PROTECTION=enabled
    networks:
      - azora-network

  vendor-management:
    build: ./services/azora-marketplace/vendors
    ports:
      - "4401:4401"
    environment:
      - KYB_VERIFICATION=strict
      - RATING_SYSTEM=blockchain_verified
    networks:
      - azora-network

  transaction-processor:
    build: ./services/azora-marketplace/transactions
    ports:
      - "4402:4402"
    environment:
      - PAYMENT_METHODS=azr,crypto,fiat,credit
      - DISPUTE_RESOLUTION=ai_mediated
    networks:
      - azora-network

  # ===========================================================================
  # API GATEWAY - Universal API Management
  # ===========================================================================

  api-gateway:
    build: ./services/api-gateway
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - RATE_LIMITING=intelligent
      - AUTH_METHODS=jwt,oauth2,api_key,mtls
      - GRAPHQL_ENABLED=true
      - REST_ENABLED=true
      - GRPC_ENABLED=true
      - WEBSOCKET_ENABLED=true
    networks:
      - azora-network

  api-analytics:
    build: ./services/api-analytics
    ports:
      - "4500:4500"
    environment:
      - METRICS=latency,throughput,errors,usage
      - BILLING=per_request
    networks:
      - azora-network

  # ===========================================================================
  # CONSULTING & ONBOARDING - AI-Powered Implementation
  # ===========================================================================

  ai-onboarding-agent:
    build: ./services/ai-onboarding
    ports:
      - "4600:4600"
    environment:
      - AGENT_PERSONALITY=professional_consultant
      - LANGUAGES=all_193_un_languages
      - ONBOARDING_TYPES=government,enterprise,sme,individual
    networks:
      - azora-network

  implementation-assistant:
    build: ./services/implementation-assistant
    ports:
      - "4601:4601"
    environment:
      - CODE_GENERATION=enabled
      - ARCHITECTURE_DESIGN=enabled
      - SECURITY_AUDIT=enabled
    networks:
      - azora-network

  compliance-advisor:
    build: ./services/compliance-advisor
    ports:
      - "4602:4602"
    environment:
      - JURISDICTIONS=all_193_un_countries
      - REGULATIONS=GDPR,CCPA,POPIA,LGPD,PDPA,SOX,HIPAA,PCI_DSS
    networks:
      - azora-network

  # ===========================================================================
  # DATA ANALYTICS - Intelligence-Grade Insights
  # ===========================================================================

  analytics-engine:
    build: ./services/analytics-engine
    ports:
      - "4700:4700"
    environment:
      - ANALYTICS_TYPES=descriptive,diagnostic,predictive,prescriptive
      - REAL_TIME=enabled
      - ML_MODELS=xgboost,lightgbm,neural_prophet
    networks:
      - azora-network

  data-warehouse:
    build: ./services/data-warehouse
    ports:
      - "4701:4701"
    environment:
      - WAREHOUSE_TYPE=columnar
      - COMPRESSION=zstd
      - PARTITIONING=intelligent
    volumes:
      - data_warehouse:/warehouse
    networks:
      - azora-network

  business-intelligence:
    build: ./services/business-intelligence
    ports:
      - "4702:4702"
    environment:
      - VISUALIZATION=enabled
      - DASHBOARDS=customizable
      - REPORTS=automated
    networks:
      - azora-network

  # ===========================================================================
  # SECURITY & COMPLIANCE - Nation-State Level
  # ===========================================================================

  quantum-encryption-service:
    build: ./services/quantum-encryption
    ports:
      - "4800:4800"
    environment:
      - ALGORITHMS=Kyber1024,Dilithium5,SPHINCS+
      - KEY_ROTATION=automatic
    networks:
      - azora-network

  zero-trust-gateway:
    build: ./services/zero-trust
    ports:
      - "4801:4801"
    environment:
      - AUTHENTICATION=mfa,biometric,behavioral
      - AUTHORIZATION=rbac,abac,pbac
    networks:
      - azora-network

  audit-logger:
    build: ./services/audit-logger
    ports:
      - "4802:4802"
    environment:
      - LOG_RETENTION=7_years
      - TAMPER_PROOF=blockchain_anchored
    volumes:
      - audit_logs:/logs
    networks:
      - azora-network

  # ===========================================================================
  # BLOCKCHAIN & SOVEREIGN MINTER
  # ===========================================================================

  blockchain-node:
    build: ./services/blockchain-node
    ports:
      - "8545:8545"
      - "8546:8546"
      - "30303:30303"
    environment:
      - CONSENSUS=proof_of_contribution
      - FINALITY=instant
      - TPS=100000
    volumes:
      - blockchain_data:/blockchain
    networks:
      - azora-network

  sovereign-minter:
    build: ./services/sovereign-minter
    ports:
      - "4002:4002"
    environment:
      - MINTING_ALGORITHM=intelligent_demand_based
      - BURN_MECHANISM=automatic
      - SUPPLY_CAP=10_billion
    networks:
      - azora-network

  # ===========================================================================
  # GOVERNMENT SERVICES - Specialized Modules
  # ===========================================================================

  government-portal:
    build: ./services/government-portal
    ports:
      - "4900:4900"
    environment:
      - SERVICES=tax,identity,permits,voting,records
      - SECURITY_CLEARANCE=top_secret
    networks:
      - azora-network

  digital-identity-service:
    build: ./services/digital-identity
    ports:
      - "4901:4901"
    environment:
      - IDENTITY_STANDARD=W3C_DID
      - BIOMETRIC_AUTH=enabled
      - ZERO_KNOWLEDGE_PROOFS=enabled
    networks:
      - azora-network

  # ===========================================================================
  # FRONTEND & UI
  # ===========================================================================

  admin-dashboard:
    build: ./frontend/admin-dashboard
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://api-gateway:8080
    networks:
      - azora-network

  government-dashboard:
    build: ./frontend/government-dashboard
    ports:
      - "3001:3001"
    networks:
      - azora-network

  enterprise-dashboard:
    build: ./frontend/enterprise-dashboard
    ports:
      - "3002:3002"
    networks:
      - azora-network

  student-portal:
    build: ./frontend/student-portal
    ports:
      - "5173:5173"
    networks:
      - azora-network

volumes:
  redis_cluster:
  postgres_primary:
  timescale_data:
  mongo_primary:
  elastic_data:
  ai_models:
  cloud_storage:
  data_warehouse:
  audit_logs:
  blockchain_data:

networks:
  azora-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
