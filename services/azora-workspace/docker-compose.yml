version: '3.8'

services:
  azora-workspace:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: azora-workspace
    ports:
      - "4100:4100"
    environment:
      - NODE_ENV=production
      - PORT=4100
      - MONGODB_URI=mongodb://mongodb:27017/azora-workspace
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-azora-workspace-secret}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
    depends_on:
      - mongodb
      - redis
    networks:
      - azora-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7-jammy
    container_name: azora-workspace-mongodb
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_DATABASE=azora-workspace
    volumes:
      - mongodb_data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - azora-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: azora-workspace-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - azora-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data:
  redis_data:

networks:
  azora-network:
    driver: bridge