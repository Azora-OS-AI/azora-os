services:
  postgres-primary:
    image: postgres:15-alpine
    container_name: azora-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  student-earnings-db:
    image: postgres:15-alpine
    container_name: azora-student-db
    environment:
      POSTGRES_DB: ${STUDENT_DB_NAME}
      POSTGRES_USER: ${STUDENT_DB_USER}
      POSTGRES_PASSWORD: ${STUDENT_DB_PASSWORD}
    volumes:
      - student_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${STUDENT_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis-master:
    image: redis:7-alpine
    container_name: azora-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 2gb
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mongodb:
    image: mongo:7
    container_name: azora-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-azora_mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  blockchain:
    image: trufflesuite/ganache:latest
    container_name: azora-blockchain
    command: >
      --deterministic
      --networkId ${BLOCKCHAIN_NETWORK_ID}
      --chainId ${BLOCKCHAIN_CHAIN_ID}
      --gasLimit 12000000
      --accounts 50
      --defaultBalanceEther 10000
    ports:
      - "8545:8545"
    restart: unless-stopped

  azora-coin-integration:
    build:
      context: ./services/azora-coin-integration
    container_name: azora-coin-service
    environment:
      NODE_ENV: ${NODE_ENV}
      BLOCKCHAIN_RPC_URL: ${BLOCKCHAIN_RPC_URL}
      PRIVATE_KEY: ${PRIVATE_KEY}
      AZORA_COIN_CONTRACT: ${AZORA_COIN_CONTRACT}
      AZORA_COIN_PORT: ${AZORA_COIN_PORT}
    ports:
      - "${AZORA_COIN_PORT}:${AZORA_COIN_PORT}"
    depends_on:
      blockchain:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${AZORA_COIN_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  offline-sync-service:
    build:
      context: ./services/offline-sync-service
    container_name: azora-offline-sync
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-primary:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-master:6379
      MONGODB_URL: mongodb://${MONGODB_USER:-azora_mongo}:${MONGODB_PASSWORD}@mongodb:27017
      OFFLINE_SYNC_PORT: ${OFFLINE_SYNC_PORT}
    ports:
      - "${OFFLINE_SYNC_PORT}:${OFFLINE_SYNC_PORT}"
    depends_on:
      postgres-primary:
        condition: service_healthy
      redis-master:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${OFFLINE_SYNC_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  student_db_data:
  redis_data:
  mongodb_data:
