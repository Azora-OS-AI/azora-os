{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/azora-os/synapse/vault-ui/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Box, Container, Typography, Button, Grid, Card, CardContent, AppBar, Toolbar,\n  IconButton, Tabs, Tab, Table, TableBody, TableCell, TableContainer, TableHead,\n  TableRow, Paper, Chip, Dialog, DialogTitle, DialogContent, DialogActions,\n  TextField, FormControl, InputLabel, Select, MenuItem, Alert\n} from '@mui/material';\nimport {\n  Lock as LockIcon, Folder as FolderIcon, Share as ShareIcon, Upload as UploadIcon,\n  Settings as SettingsIcon, Search as SearchIcon, FilterList as FilterIcon,\n  PersonAdd as PersonAddIcon, Security as SecurityIcon\n} from '@mui/icons-material';\nimport axios from 'axios';\n\ninterface Asset {\n  id: string;\n  name: string;\n  type: string;\n  size: number;\n  createdAt: string;\n  encrypted: boolean;\n  shared: boolean;\n}\n\ninterface AccessRule {\n  id: string;\n  assetId: string;\n  userId: string;\n  permissions: string[];\n  expiresAt?: string;\n}\n\nexport default function VaultDashboard() {\n  const [tabValue, setTabValue] = useState(0);\n  const [assets, setAssets] = useState<Asset[]>([]);\n  const [accessRules, setAccessRules] = useState<AccessRule[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [uploadDialog, setUploadDialog] = useState(false);\n  const [shareDialog, setShareDialog] = useState(false);\n  const [selectedAsset, setSelectedAsset] = useState<Asset | null>(null);\n\n  useEffect(() => {\n    loadAssets();\n    loadAccessRules();\n  }, []);\n\n  const loadAssets = async () => {\n    try {\n      const response = await axios.get('/api/vault/assets');\n      setAssets(response.data);\n    } catch (err) {\n      setError('Failed to load assets');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadAccessRules = async () => {\n    try {\n      const response = await axios.get('/api/vault/access-rules');\n      setAccessRules(response.data);\n    } catch (err) {\n      console.error('Failed to load access rules');\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleUpload = async (file: File) => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      await axios.post('/api/vault/assets', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      loadAssets();\n      setUploadDialog(false);\n    } catch (err) {\n      setError('Failed to upload asset');\n    }\n  };\n\n  const handleShare = async (assetId: string, userId: string, permissions: string[]) => {\n    try {\n      await axios.post('/api/vault/access-rules', {\n        assetId,\n        userId,\n        permissions\n      });\n      loadAccessRules();\n      setShareDialog(false);\n    } catch (err) {\n      setError('Failed to share asset');\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      {/* Header */}\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <SecurityIcon sx={{ mr: 2 }} />\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Azora Vault - Secure Asset Management\n          </Typography>\n          <IconButton color=\"inherit\">\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Status Cards */}\n        <Grid container spacing={3} sx={{ mb: 4 }}>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Total Assets\n                </Typography>\n                <Typography variant=\"h5\">\n                  {assets.length}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Encrypted Assets\n                </Typography>\n                <Typography variant=\"h5\">\n                  {assets.filter(a => a.encrypted).length}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Shared Assets\n                </Typography>\n                <Typography variant=\"h5\">\n                  {assets.filter(a => a.shared).length}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Access Rules\n                </Typography>\n                <Typography variant=\"h5\">\n                  {accessRules.length}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        {/* Tabs */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"vault tabs\">\n            <Tab label=\"Assets\" />\n            <Tab label=\"Access Control\" />\n            <Tab label=\"Credentials\" />\n          </Tabs>\n        </Box>\n\n        {/* Assets Tab */}\n        {tabValue === 0 && (\n          <Box sx={{ mt: 3 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n              <Typography variant=\"h6\">Your Assets</Typography>\n              <Button\n                variant=\"contained\"\n                startIcon={<UploadIcon />}\n                onClick={() => setUploadDialog(true)}\n              >\n                Upload Asset\n              </Button>\n            </Box>\n\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Created</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {assets.map((asset) => (\n                    <TableRow key={asset.id}>\n                      <TableCell>\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                          <FolderIcon sx={{ mr: 1 }} />\n                          {asset.name}\n                        </Box>\n                      </TableCell>\n                      <TableCell>{asset.type}</TableCell>\n                      <TableCell>{(asset.size / 1024).toFixed(1)} KB</TableCell>\n                      <TableCell>{new Date(asset.createdAt).toLocaleDateString()}</TableCell>\n                      <TableCell>\n                        {asset.encrypted && <Chip label=\"Encrypted\" color=\"primary\" size=\"small\" sx={{ mr: 1 }} />}\n                        {asset.shared && <Chip label=\"Shared\" color=\"secondary\" size=\"small\" />}\n                      </TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={() => {\n                            setSelectedAsset(asset);\n                            setShareDialog(true);\n                          }}\n                        >\n                          <ShareIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        )}\n\n        {/* Access Control Tab */}\n        {tabValue === 1 && (\n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>Access Rules</Typography>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Asset</TableCell>\n                    <TableCell>User</TableCell>\n                    <TableCell>Permissions</TableCell>\n                    <TableCell>Expires</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {accessRules.map((rule) => (\n                    <TableRow key={rule.id}>\n                      <TableCell>{rule.assetId}</TableCell>\n                      <TableCell>{rule.userId}</TableCell>\n                      <TableCell>\n                        {rule.permissions.map(perm => (\n                          <Chip key={perm} label={perm} size=\"small\" sx={{ mr: 0.5 }} />\n                        ))}\n                      </TableCell>\n                      <TableCell>\n                        {rule.expiresAt ? new Date(rule.expiresAt).toLocaleDateString() : 'Never'}\n                      </TableCell>\n                      <TableCell>\n                        <Button size=\"small\" color=\"error\">Revoke</Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        )}\n\n        {/* Credentials Tab */}\n        {tabValue === 2 && (\n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>Stored Credentials</Typography>\n            <Alert severity=\"info\">\n              Credential vault functionality coming soon. This will securely store and manage digital credentials issued by Azora services.\n            </Alert>\n          </Box>\n        )}\n      </Container>\n\n      {/* Upload Dialog */}\n      <Dialog open={uploadDialog} onClose={() => setUploadDialog(false)}>\n        <DialogTitle>Upload New Asset</DialogTitle>\n        <DialogContent>\n          <input\n            type=\"file\"\n            onChange={(e) => {\n              const file = e.target.files?.[0];\n              if (file) handleUpload(file);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setUploadDialog(false)}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Share Dialog */}\n      <Dialog open={shareDialog} onClose={() => setShareDialog(false)}>\n        <DialogTitle>Share Asset</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            label=\"User ID\"\n            margin=\"normal\"\n          />\n          <FormControl fullWidth margin=\"normal\">\n            <InputLabel>Permissions</InputLabel>\n            <Select multiple>\n              <MenuItem value=\"read\">Read</MenuItem>\n              <MenuItem value=\"write\">Write</MenuItem>\n              <MenuItem value=\"delete\">Delete</MenuItem>\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShareDialog(false)}>Cancel</Button>\n          <Button variant=\"contained\">Share</Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Footer */}\n      <Box sx={{ bgcolor: 'primary.main', color: 'white', py: 2, mt: 4 }}>\n        <Container maxWidth=\"xl\">\n          <Typography variant=\"body2\" textAlign=\"center\">\n            Azora Vault - Secure, programmable asset custody. Azora OS is committed to constitutional compliance.\n          </Typography>\n        </Container>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}