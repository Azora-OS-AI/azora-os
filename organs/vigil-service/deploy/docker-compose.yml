version: '3.8'

services:
  vigil-api:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - JWT_SECRET=development-secret-key-change-in-production
      - UI_ORIGIN=http://localhost:3000
      - MQTT_BROKER=mqtt://mqtt:1883
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - mqtt
      - kafka
    networks:
      - vigil-network
    restart: unless-stopped

  mqtt:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - vigil-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - vigil-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - vigil-network

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=vigil
      - POSTGRES_USER=vigil
      - POSTGRES_PASSWORD=vigil123
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - vigil-network

volumes:
  mosquitto_data:
  mosquitto_logs:
  timescale_data:

networks:
  vigil-network:
    driver: bridge